// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  profile String?
}

model ContentDisplayPeriod {
  id Int @id
  from String
  to String
  representativeProduct RepresentativeProduct @relation(fields: [id], references: [id])
}

model RepresentativeProduct {
  id Int @id
  productName String
  productImage String
  productImageOrigin String?
  originalPrice Int?
  discountedPrice Int
  discountRate Int?
  groupDiscountStatus String?
  groupDiscountRate Int?
  groupDiscountedPrice Int?
  groupDiscountWillClosed Boolean?
  groupDiscountUserCount Int?
  groupDiscountStartAt Int?
  groupDiscountEndAt Int?
  alarmDisplaying Boolean?
  groupDiscountRemainSeconds Int?
  storeId Int
  storeName String
  storeDomain String?
  storeProfileImage String
  new Boolean?
  linkPath String
  storeLinkPath String
  plusFriendSubscriberExclusive Boolean?
  farmer Boolean?
  deliveryFeeType String?
  freeDelivery Boolean
  reviewCount Int?
  productPositivePercentage Int?
  imageRatio String?
  displayedSaleStatus String?
  categoryId String
  categoryName String
  hasAdditionalOptionPrice Boolean?
  groupDiscountPeriod GroupDiscountPeriod?
  profiles String[]
  totalSaleCount Int?
  trackId String?
  affiliate Boolean?
  sharingImageUrl String?
  affiliateSharingImageUrl String?
  onAir Boolean?
  isBrandTalkStore Boolean?
  contentId Int?
  contentDisplayPeriod ContentDisplayPeriod?
  type String?
  landingUrl String
  mainCopy String?
  label String?
  imageUrl String
  imageUrlOrigin String?
  logoImageUrl String?
  contentRemainDays Int?
  remainDays Int?
  contentOpenDt String?
  contentCloseDt String?
  likeProductCount Int?
  isLiked Boolean?
  score Int?
}

model GroupDiscountPeriod {
  id Int @id
  from String
  to String
  representativeProduct RepresentativeProduct @relation(fields: [id], references: [id])
}

model Product {
  id                          Int       @id @unique
  name                        String
  status                      String
  description                 String?
  instantOrder                Boolean?
  quantity                    Quantity?
  adultOnly                   Boolean?
  isLiquor                    Boolean?
  minorPurchasable            Boolean?
  booked                      Booked?
  reviewUnexposed             Boolean?
  favorite                    Boolean?
  reviewCreatable             Boolean?
  affiliate                   Boolean?
  expectedAccumulatePoint     Int?
  preventCartOrder            Boolean?
  shoppingReward              Boolean?
  images                       Image[]
  talkDeal                    TalkDeal?
  delivery                    Delivery?
  taxDeduction                Boolean?
  gift                        Gift?
  store                       Store @relation(fields: [storeId], references: [id])
  storeId                     Int
  category                    Category @relation(fields: [categoryId], references: [id])
  categoryId                  String
  price                       Price?
  review                      Review?

  banners Banner[]
  topReviews TopReview[]
  originAreas OriginArea[]
}

model Quantity {
  id                  Int @id @default(autoincrement())
  product             Product @relation(fields: [productId], references: [id])
  productId           Int @unique
  minPurchase         Int
  maxPurchase         Int
  maxPurchaseOfBuyer  Int
}

model Booked {
  product     Product @relation(fields: [productId], references: [id])
  productId   Int
  booked      Boolean

  @@id([productId])
}

model Image {
  id Int @id @default(autoincrement())
  product                   Product @relation(fields: [productId], references: [id])
  productId                 Int
  imageRatio                String
  images                    String[]
  sharingImageUrl           String
  affiliateSharingImageUrl String
}

model TalkDeal {
  id                   Int      @id
  product              Product  @relation(fields: [productId], references: [id])
  productId            Int @unique
  status               String
  groupSize            Int
  period               DateTime[]
  ongoingRoomCount     Int
  discountPrice        Int
  discountRate         Int
}

model Delivery {
  product                 Product @relation(fields: [productId], references: [id])
  productId               Int
  deliveryMethodType      String
  optionalDeliveries      String[]
  deliveryFeeType         String
  deliveryFeePaymentType  String
  deliveryFee             Int
  bundleGroupAvailable    Boolean
  availableIsolatedArea  Boolean
  hasInstallationFee     Boolean

  @@id([productId])
}

model OriginArea {
  id          Int     @id @default(autoincrement())
  product     Product @relation(fields: [productId], references: [id])
  productId   Int
  type        String
  content     String?
  others      Boolean?
}

model Gift {
  product     Product @relation(fields: [productId], references: [id])
  productId   Int
  gift        String

  @@id([productId])
}

model Store {
  id             Int      @id 
  name           String
  domain         String
  farmer         Boolean
  coverImage     String
  profileImage   String
  channelName    String
  channelUrl     String
  trackId        String?
  subscribed     Boolean?
  fresh          Boolean?

  products Product[]
}

model Category {
  id          String  @id
  name        String

  products Product[]
}

model Price {
  product                 Product @relation(fields: [productId], references: [id])
  productId               Int
  standardPrice           Int
  discountedPrice         Int
  discountRate            Int
  minDiscountedPrice      Int
  maxDiscountedPrice      Int
  totalDiscountedPrice    Int

  @@id([productId])
}

model TopReview {
  id                       Int      @id @default(autoincrement())
  product                  Product  @relation(fields: [productId], references: [id])
  productId                Int
  content                  String
  productRating            Int
  deliveryRating           Int
  productStarRating        Int
  deliveryStarRating       Int
  best                     Boolean
  writer                   String
  imageUrl                 String
  backgroundColor          String?
}

model Review {
  @@id([productId])
  product                       Product @relation(fields: [productId], references: [id])
  productId                     Int
  qnaCount                      Int
  reviewCount                   Int
  averageRating                 Int
  totalProductStarRating        Int
  totalDeliveryStarRating       Int
  productPositivePercentage     Int
  deliveryPositivePercentage    Int
  productStar1Percentage       Int
  productStar2Percentage       Int
  productStar3Percentage       Int
  productStar4Percentage       Int
}



model Banner {
  id                 Int      @id
  product            Product  @relation(fields: [productId], references: [id])
  productId          Int
  name               String
  firstImageUrl      String
  landingType        String
  landingUrl         String
  ad                 Boolean
  remainSeconds      Int
}